{"code":"import fetch from 'isomorphic-unfetch';\r\nexport class Base {\r\n    apikey;\r\n    baseUrl;\r\n    constructor(config) {\r\n        this.apikey = config.apiKey;\r\n        this.baseUrl = \"https://staging.getourvoice.com/api/v1/\";\r\n    }\r\n    invoke(endpoind, options) {\r\n        const url = `${this.baseUrl}${endpoind}`;\r\n        const hearders = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"api-key\": this.apikey\r\n        };\r\n        const config = {\r\n            ...options,\r\n            hearders\r\n        };\r\n        return fetch(url, config).then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            else {\r\n                throw new Error(response.statusText);\r\n            }\r\n        });\r\n    }\r\n}\r\n","references":["/home/bangado/Bureau/sdk/ourvoice-node/node_modules/isomorphic-unfetch/index.d.ts"],"dts":{"name":"/home/bangado/Bureau/sdk/ourvoice-node/dist/base.d.ts","writeByteOrderMark":false,"text":"type Config = {\r\n    apiKey: string;\r\n    baseUrl?: string;\r\n};\r\nexport declare abstract class Base {\r\n    private apikey;\r\n    private baseUrl;\r\n    constructor(config: Config);\r\n    protected invoke<T>(endpoind: string, options?: RequestInit): Promise<T>;\r\n}\r\nexport {};\r\n"}}
